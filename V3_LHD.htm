<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Low Head Dam Fatalities Tracker</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css">
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        
        body {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
            background-color: #f5f5f5;
        }
        
        header {
            text-align: center;
            margin-bottom: 20px;
        }
        
        h1 {
            color: #333;
            margin-bottom: 10px;
        }
        
        .map-container {
            height: 500px;
            margin-bottom: 20px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        #map {
            height: 100%;
            width: 100%;
        }
        
        .stats-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .stat-box {
            text-align: center;
            padding: 15px;
            min-width: 200px;
        }
        
        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            color: #e74c3c;
        }
        
        .stat-label {
            color: #555;
            font-size: 0.9em;
        }
        
        .search-container {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        #searchInput {
            padding: 10px;
            width: calc(100% - 120px);
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        
        .add-incident-btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        
        .add-incident-btn:hover {
            background-color: #2980b9;
        }
        
        .dam-list {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            max-height: 600px;
            overflow-y: auto;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .dam-item {
            padding: 15px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        
        .dam-item:hover {
            background-color: #f9f9f9;
        }
        
        .dam-name {
            font-weight: bold;
            font-size: 1.1em;
            margin-bottom: 5px;
        }
        
        .dam-location {
            color: #555;
            font-size: 0.9em;
            margin-bottom: 5px;
        }
        
        .dam-fatalities {
            color: #e74c3c;
            font-weight: bold;
        }
        
        .marker-popup img {
            max-width: 100%;
            margin-bottom: 10px;
            border-radius: 4px;
        }
        
        .incidents-list {
            margin-top: 10px;
            padding-left: 20px;
        }
        
        .incident-item {
            margin-bottom: 5px;
        }
        
        footer {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            font-size: 0.9em;
            color: #777;
        }
        
        .loading {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(255,255,255,0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        
        .loading-text {
            font-size: 1.5em;
            color: #333;
        }
        
        @media (max-width: 768px) {
            .map-container {
                height: 350px;
            }
            
            .search-container {
                flex-direction: column;
                gap: 10px;
            }
            
            #searchInput {
                width: 100%;
                margin-bottom: 10px;
            }
            
            .add-incident-btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="loading">
        <div class="loading-text">Loading dam data...</div>
    </div>

    <header>
        <h1>Low Head Dam Fatalities Tracker</h1>
        <p>Tracking incidents and fatalities at low head dams across the country</p>
    </header>

    <div class="map-container">
        <div id="map"></div>
    </div>

    <div class="stats-container">
        <div class="stat-box">
            <div id="totalFatalities" class="stat-number">0</div>
            <div class="stat-label">TOTAL FATALITIES RECORDED</div>
        </div>
        <div class="stat-box">
            <div id="fatalSites" class="stat-number">0</div>
            <div class="stat-label">NUMBER OF FATAL SITES</div>
        </div>
        <div class="stat-box">
            <div id="maxFatalities" class="stat-number">0</div>
            <div class="stat-label">MAX. FATALITIES AT A SINGLE LOCATION</div>
        </div>
        <div class="stat-box">
            <div id="siteWithMostFatalities" class="stat-number">-</div>
            <div class="stat-label">SITE WITH THE MOST FATALITIES</div>
        </div>
        <div class="stat-box">
            <div id="avgFatalitiesPerSite" class="stat-number">0</div>
            <div class="stat-label">AVERAGE FATALITIES PER SITE</div>
        </div>
    </div>

    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Search by dam name, location, or waterway...">
        <button class="add-incident-btn" onclick="openReportForm()">Report Incident</button>
    </div>

    <div class="dam-list" id="damList">
        <!-- Dam list items will be populated here -->
    </div>

    <footer>
        <p>The Low Head Dam Fatalities Tracker is a public service project to raise awareness about the dangers of low head dams.</p>
        <p>Data last updated: <span id="lastUpdated">Loading...</span></p>
    </footer>

    <script>
        // Global variables
        let map;
        let markers = [];
        let damData = [];
        
        // data URL - Google Apps Script web app URL
        const DATA_URL = "https://script.google.com/macros/s/AKfycbwdA7zSg1UWuDZ0AJyLS4YRPfBnXzVyDnT_cDW-je9prTChxPr3Cqq9P03i6KAWGH3Azg/exec";
        
        // Initialize the page
        async function initialize() {
            try {
              	 	const response = await fetch(DATA_URL);
			const json = await response.json();
			damData = json.dams;
                
                initializeMap();
                updateStatistics();
                populateDamList();
                setupSearchFunctionality();
                
                // Hide loading screen
                document.querySelector('.loading').style.display = 'none';
                
                // Update last updated time
                document.getElementById('lastUpdated').textContent = new Date().toLocaleDateString();
            } catch (error) {
                console.error("Error initializing the application:", error);
                alert("There was an error loading the data. Please try again later.");
            }
        }
        
        // Initialize the map
        function initializeMap() {
            // Center the map on the US
            map = L.map('map').setView([39.8283, -98.5795], 4);
            
            // Add the tile layer (OpenStreetMap)
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            
            // Add markers for each dam
            damData.forEach(dam => {
                const marker = L.marker([dam.latitude, dam.longitude])
                    .addTo(map)
                    .bindPopup(createPopupContent(dam));
                
                marker.damId = dam.id;
                markers.push(marker);
                
                // Event listener for popup open to highlight dam in list
                marker.on('click', function() {
                    highlightDamInList(dam.id);
                });
            });
        }
        
        // Create popup content for a dam
        function createPopupContent(dam) {
            let content = `<div class="marker-popup">
                <h3>${dam.name}</h3>`;
                
            if (dam.imageUrl) {
                content += `<img src="${dam.imageUrl}" alt="${dam.name}">`;
            }
            
            content += `
                <p><strong>Location:</strong> ${dam.location}</p>`;
                
            if (dam.county) {
                content += `<p><strong>County:</strong> ${dam.county}</p>`;
            }
            
            content += `
                <p><strong>Fatalities:</strong> ${dam.fatalities}</p>
                <button onclick="showDamDetails(${dam.id})" style="background-color: #3498db; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer; margin-top: 10px;">View Incidents</button>
            </div>`;
            
            return content;
        }
        
        // Show detailed information about a dam and its incidents
        function showDamDetails(damId) {
            const dam = damData.find(d => d.id === damId);
            if (!dam) return;
            
            let detailsHtml = `
                <div class="marker-popup">
                    <h3>${dam.name}</h3>`;
                    
            if (dam.imageUrl) {
                detailsHtml += `<img src="${dam.imageUrl}" alt="${dam.name}">`;
            }
            
            detailsHtml += `
                    <p><strong>Location:</strong> ${dam.location}</p>`;
                    
            if (dam.county) {
                detailsHtml += `<p><strong>County:</strong> ${dam.county}</p>`;
            }
            
            detailsHtml += `
                    <p><strong>Fatalities:</strong> ${dam.fatalities}</p>
                    <h4>Incident History</h4>`;
                    
            if (dam.incidents.length === 0) {
                detailsHtml += `<p>No incident details available.</p>`;
            } else {
                detailsHtml += `<ul class="incidents-list">`;
                
                dam.incidents.forEach(incident => {
                    detailsHtml += `
                        <li class="incident-item">
                            <strong>${incident.date}:</strong> ${incident.description} - 
                            ${incident.fatalities} ${incident.fatalities === 1 ? 'fatality' : 'fatalities'}
                        </li>`;
                });
                
                detailsHtml += `</ul>`;
            }
            
            detailsHtml += `
                </div>`;
            
            // Find the marker for this dam and update its popup content
            const marker = markers.find(m => m.damId === damId);
            if (marker) {
                marker.setPopupContent(detailsHtml);
                if (!marker.isPopupOpen()) {
                    marker.openPopup();
                }
            }
            
            // Scroll to the dam in the list and highlight it
            highlightDamInList(damId);
        }
        
        // Highlight a dam in the list
        function highlightDamInList(damId) {
            const listItems = document.querySelectorAll('.dam-item');
            
            listItems.forEach(item => {
                item.style.backgroundColor = '';
                
                if (parseInt(item.dataset.damId) === damId) {
                    item.style.backgroundColor = '#e3f2fd';
                    item.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            });
        }
        
        // Update statistics
        function updateStatistics() {
            let totalFatalities = 0;
            let mostDangerousDam = { name: '', fatalities: 0 };
            let damsWithFatalities = 0;
            
            damData.forEach(dam => {
                totalFatalities += dam.fatalities;
                
                if (dam.fatalities > 0) {
                    damsWithFatalities++;
                }
                
                if (dam.fatalities > mostDangerousDam.fatalities) {
                    mostDangerousDam = { name: dam.name, fatalities: dam.fatalities };
                }
            });
            
            // Calculate average fatalities per site (only for sites with fatalities)
            const avgFatalitiesPerSite = damsWithFatalities > 0 ? 
                (totalFatalities / damsWithFatalities).toFixed(1) : 0;
            
            document.getElementById('totalFatalities').textContent = totalFatalities;
            document.getElementById('fatalSites').textContent = damsWithFatalities;
            document.getElementById('maxFatalities').textContent = mostDangerousDam.fatalities;
            document.getElementById('siteWithMostFatalities').textContent = mostDangerousDam.name;
            document.getElementById('avgFatalitiesPerSite').textContent = avgFatalitiesPerSite;
        }
        
        // Populate the dam list
        function populateDamList() {
            const damListElement = document.getElementById('damList');
            damListElement.innerHTML = '';
            
            // Sort dams by fatalities (highest first)
            const sortedDams = [...damData].sort((a, b) => b.fatalities - a.fatalities);
            
            sortedDams.forEach(dam => {
                const damItem = document.createElement('div');
                damItem.className = 'dam-item';
                damItem.dataset.damId = dam.id;
                
                damItem.innerHTML = `
                    <div class="dam-name">${dam.name}</div>
                    <div class="dam-location">${dam.location}${dam.county ? ' - ' + dam.county : ''}</div>
                    <div class="dam-fatalities">${dam.fatalities} ${dam.fatalities === 1 ? 'fatality' : 'fatalities'}</div>
                `;
                
                damItem.addEventListener('click', () => {
                    // Find the marker for this dam and open its popup
                    const marker = markers.find(m => m.damId === dam.id);
                    if (marker) {
                        map.setView([dam.latitude, dam.longitude], 12);
                        showDamDetails(dam.id);
                    }
                });
                
                damListElement.appendChild(damItem);
            });
        }
        
        // Setup search functionality
        function setupSearchFunctionality() {
            const searchInput = document.getElementById('searchInput');
            
            searchInput.addEventListener('input', () => {
                const searchTerm = searchInput.value.toLowerCase();
                
                // Filter dam list
                const damItems = document.querySelectorAll('.dam-item');
                damItems.forEach(item => {
                    const damId = parseInt(item.dataset.damId);
                    const dam = damData.find(d => d.id === damId);
                    
                    const nameMatch = dam.name.toLowerCase().includes(searchTerm);
                    const locationMatch = dam.location.toLowerCase().includes(searchTerm);
                    const countyMatch = dam.county ? dam.county.toLowerCase().includes(searchTerm) : false;
                    
                    item.style.display = (nameMatch || locationMatch || countyMatch) ? 'block' : 'none';
                });
                
                // Filter map markers
                markers.forEach(marker => {
                    const dam = damData.find(d => d.id === marker.damId);
                    
                    const nameMatch = dam.name.toLowerCase().includes(searchTerm);
                    const locationMatch = dam.location.toLowerCase().includes(searchTerm);
                    const countyMatch = dam.county ? dam.county.toLowerCase().includes(searchTerm) : false;
                    
                    if (nameMatch || locationMatch || countyMatch) {
                        marker.addTo(map);
                    } else {
                        marker.remove();
                    }
                });
            });
        }
        
        // Open the Google Form for reporting incidents
        function openReportForm() {
            // Replace with your actual Google Form URL
            window.open('https://forms.gle/YourGoogleFormID', '_blank');
        }
        
        
        // Initialize when the page loads
        window.addEventListener('load', initialize);
    </script>
</body>
</html>